{"version":3,"sources":["index_DegreesOfDarkness.jpg","index_DragonFamily.jpg","index_FridgeFeast.jpg","index_Heist.jpg","index_HeroesBeware.jpg","index_PixelPusher.jpg","index_PodRacer.jpg","index_RumRunner.jpg","index_Slither.jpg","index_Deeper.jpg","index_Undiscovered.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Game","props","optionalLink","linkText","url","react_default","a","createElement","href","target","rel","className","style","backgroundImage","concat","image","title","pitchVideo","howToPlayVideo","rulebook","sellSheet","GameList","index_DegreesOfDarkness","index_Undiscovered","tabletopia","index_DragonFamily","awards","index_HeroesBeware","index_Deeper","index_FridgeFeast","index_Heist","index_PixelPusher","index_PodRacer","index_RumRunner","index_Slither","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bb292b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index_DegreesOfDarkness.ec65e402.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_DragonFamily.b99e6a83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_FridgeFeast.cf92c612.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_Heist.5ae18e2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_HeroesBeware.82b7abb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_PixelPusher.20a741b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_PodRacer.ffb10f79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_RumRunner.175a6bc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_Slither.c836b397.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_Deeper.24f2a7f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/index_Undiscovered.d3d9b14e.jpg\";","import React from 'react';\nimport './App.css';\n\nimport index_DegreesOfDarkness from './index_DegreesOfDarkness.jpg';\nimport index_DragonFamily from './index_DragonFamily.jpg';\nimport index_FridgeFeast from './index_FridgeFeast.jpg';\nimport index_Heist from './index_Heist.jpg';\nimport index_HeroesBeware from './index_HeroesBeware.jpg';\nimport index_PixelPusher from './index_PixelPusher.jpg';\nimport index_PodRacer from './index_PodRacer.jpg';\nimport index_RumRunner from './index_RumRunner.jpg';\nimport index_Slither from './index_Slither.jpg';\nimport index_Deeper from './index_Deeper.jpg';\nimport index_Undiscovered from './index_Undiscovered.jpg';\n\n\n\nfunction Game(props) {\n\n  const optionalLink = (linkText, url) => {\n    if (!url) \n      return;\n    return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>\n  }\n  return (\n    <div className=\"game\">\n      <div className=\"thumbnail\" style={{backgroundImage: `url(${props.image})`}}></div>\n      <div className=\"content\">\n        <div className=\"title\">{props.title}</div>\n        {optionalLink(\"Pitch Video\", props.pitchVideo)}\n        {optionalLink(\"How To Play Video\", props.howToPlayVideo)}\n        {optionalLink(\"Rulebook\", props.rulebook)}\n        {optionalLink(\"Sell Sheet\", props.sellSheet)}\n      </div>\n    </div>\n  );\n}\n\nfunction GameList() {\n  return (\n    <div className=\"list\">\n\n      <h1>In Development</h1>\n\n      <Game\n        title=\"Degrees of Darkness\"\n        image={index_DegreesOfDarkness}\n        pitchVideo=\"https://www.youtube.com/watch?v=45JW44CnKDY\"\n        howToPlayVideo=\"https://www.youtube.com/watch?v=L23Nj6Aqalk\"\n        rulebook=\"https://1drv.ms/b/s!AidSzKQj8MkEjrVJNfYlSTauXPhJ7A\"\n        sellSheet=\"https://1drv.ms/b/s!AidSzKQj8MkEjrpwKgDjE179ZG_A8w\"/>\n\n      <Game\n        title=\"Undiscovered\"\n        image={index_Undiscovered}\n        pitchVideo=\"https://www.youtube.com/watch?v=J_gW5UxZWno&feature=youtu.be\"\n        howToPlayVideo=\"https://www.youtube.com/watch?v=IHmHjDy7BKI\"\n        rulebook=\"https://1drv.ms/b/s!AidSzKQj8MkEjp1RvEZ96UPhVigEhQ\"\n        sellSheet=\"https://1drv.ms/b/s!AidSzKQj8MkEjqdD-9ZLVkRAcdRlyw\"\n        tabletopia=\"https://tabletopia.com/playground/undiscovered-72usd8/play-now\"/>\n\n      <h1>Ready to Pitch</h1>\n\n      <Game\n        title=\"Dragon Family\"\n        image={index_DragonFamily}\n        pitchVideo=\"https://www.youtube.com/watch?v=brpuqTsTv04\"\n        howToPlayVideo=\"https://www.youtube.com/watch?v=hFT13tLox54\"\n        rulebook=\"https://1drv.ms/b/s!AidSzKQj8MkEjsEX_9BN99cAJgFz4Q\"\n        sellSheet=\"https://1drv.ms/b/s!AidSzKQj8MkEjqlxogXgvnNiQ_4heA\"\n        awards=\"http://playtestnw.com/contests/\"/>\n\n      <Game\n        title=\"Heroes Beware!\"\n        image={index_HeroesBeware}\n        rulebook=\"https://1drv.ms/b/s!AidSzKQj8MkEjqww6X3YTI_wq24o4g?e=AcR3Vy\"\n        sellSheet=\"https://1drv.ms/b/s!AidSzKQj8MkEjtUQdIRkFkxHiwfMNw?e=2BCiKK\"/>\n\n      <h1>Prototypes</h1>\n\n      <Game\n        title=\"Deeper\"\n        image={index_Deeper}/>\n\n      <Game\n        title=\"Fridge Feast\"\n        image={index_FridgeFeast}/>\n\n      <Game\n        title=\"Heist\"\n        image={index_Heist}/>\n\n      <Game\n        title=\"Pixel Pusher\"\n        image={index_PixelPusher}/>\n\n      <Game\n        title=\"Pod Racer\"\n        image={index_PodRacer}/>\n\n      <Game\n        title=\"Rum Runner\"\n        image={index_RumRunner}/>\n\n      <Game\n        title=\"Slither\"\n        image={index_Slither}/>\n\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <GameList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}